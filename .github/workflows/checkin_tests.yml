# SPDX-FileCopyrightText: (C) 2025 Tenstorrent AI ULC
# SPDX-License-Identifier: Apache-2.0

name: Checkin Tests

on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - main
  merge_group:
    branches:
    - main

jobs:
  checkin-tests:
    env:
      GIST_ID: 'c230835a5065366c13d3bbfb79f23bf6'
      GIST_TOKEN: ${{ secrets.POLARIS_BIG_GIST_TOKEN }}
      REPO_NAME: ${{ github.event.repository.name }}
      GITHUB_REF: ${{ github.ref }}
      GITHUB_SHA: ${{ github.sha }}
      PASS_YELLOW: 75
      PASS_REQUIRED: 95
      COVERAGE_YELLOW: 75
      COVERAGE_REQUIRED: 85

    runs-on: tt-ubuntu-2204-large-stable
    strategy:
      max-parallel: 5

    defaults:
      run:
        shell: bash -el {0}

    steps:
    - id: checkout
      name: Checkout
      uses: actions/checkout@v4

    - id: lfcdownload
      name: Download required files from LFC
      uses: ./.github/actions/lfcdownload

    - id: setup-mamba
      name: Setup mamba - developer
      if: '!cancelled()'
      uses: ./.github/actions/setup_mamba
      with:
        environment-file: envdev.yaml
        environment-name: poldevenv

    - id: run-unit-and-coverage-tests
      name: Run Unit and Coverage Tests
      if: '!cancelled()'
      uses: ./.github/actions/run-python-tests

    - id: run-static-analysis
      name: Run Static Analysis
      if: '!cancelled()'
      uses: ./.github/actions/run-static-analysis

    - id: generate-test-badges
      name: Generate Test and Coverage Badges
      if: ${{ !cancelled() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      uses: ./.github/actions/generate-test-badges
      with:
        gist-id: ${{ env.GIST_ID }}
        gist-token: ${{ env.GIST_TOKEN }}
        repo-name: ${{ env.REPO_NAME }}
        coverage-yellow-threshold: ${{ env.COVERAGE_YELLOW }}
        coverage-required-threshold: ${{ env.COVERAGE_REQUIRED }}
        test-yellow-threshold: ${{ env.PASS_YELLOW }}
        test-required-threshold: ${{ env.PASS_REQUIRED }}

    - id: generate-status-badges
      name: Generate Status Badges
      if: ${{ !cancelled() && github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      uses: ./.github/actions/generate-status-badges
      with:
        gist-id: ${{ env.GIST_ID }}
        gist-token: ${{ env.GIST_TOKEN }}
        repo-name: ${{ env.REPO_NAME }}
        static-tests-outcome: ${{ steps.run-static-analysis.outputs.static-tests-outcome }}
        spdx-tests-outcome: ${{ steps.run-static-analysis.outputs.license-checks-outcome }}

    - id: upload-artifacts
      name: Upload artifacts
      if: '!cancelled()'
      uses: actions/upload-artifact@v4
      with:
        name: dist-wo-onnxdumps
        path: |
           .coverage
           __ci/json
           __ci/html
           __RUN_TESTS
           !__RUN_TESTS/**/*.onnx
    
  userenv-tests:
    runs-on: tt-ubuntu-2204-large-stable
    strategy:
      max-parallel: 5

    defaults:
      run:
        shell: bash -el {0}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup mamba - user
      uses: ./.github/actions/setup_mamba
      with:
        environment-file: environment.yaml
        environment-name: poluserenv

    - name: userenv-checkin-tests
      if: '!cancelled()'
      run: |
        python checkin_tests.py workloads

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: userenv-dist-wo-onnxdumps
        path: |
           __RUN_TESTS
           !__RUN_TESTS/**/*.onnx
    
    # - name: Lint with flake8
    #   run: |
    #     conda install flake8
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
